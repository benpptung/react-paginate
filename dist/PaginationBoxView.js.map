{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","evt","preventDefault","returnValue","state","selected","handlePageSelectedIn","handleNextPage","pageCount","callCallback","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","index","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","marginPagesDisplayed","keys","Object","breakLabelKey","length","breakLabelValue","breakLabel","key","breakClassName","initialPage","forcePage","i","handlePageSelected","disableInitialCallback","nextProps","setState","pageCountNew","pageIndex","hrefBuilder","pageClassName","pageLinkClassName","activeClassName","extraAriaContext","disabled","disabledClassName","previousClasses","previousClassName","nextClasses","nextClassName","containerClassName","previousLinkClassName","previousLabel","concat","nextLinkClassName","nextLabel","side","splice","pop","shift","propTypes","number","isRequired","node","func","bool","string","oneOf","defaultProps","process","env","NODE_ENV","displayName"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict'\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport PageView from './PageView'\nimport BreakView from './BreakView'\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string,\n    side                  : PropTypes.oneOf(['both', 'left', 'right'])\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : 'selected',\n    previousClassName     : 'previous',\n    nextClassName         : 'next',\n    previousLabel         : 'Previous',\n    nextLabel             : 'Next',\n    breakLabel            : '...',\n    disabledClassName     : 'disabled',\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage\n                : props.forcePage ? props.forcePage\n                : 0\n    }\n\n    this.handlePageSelectedIn = {}\n    for (let i = 0; i < props.pageCount; ++i) {\n      this.handlePageSelectedIn[i] = this.handlePageSelected(i)\n    }\n\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof (this.props.initialPage) !== 'undefined' && !this.props.disableInitialCallback) {\n      this.callCallback(this.props.initialPage)\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof (nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage})\n    }\n\n    var pageCountNew = nextProps.pageCount\n    if (pageCountNew > this.handlePageSelectedIn.length) {\n      for (let i = 0; i < this.props.pageCount; ++i) {\n        if (this.handlePageSelectedIn[i]) continue\n        this.handlePageSelectedIn[i] = this.handlePageSelected(i)\n      }\n    }\n  }\n\n  handlePreviousPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false) // eslint-disable-line no-unused-expressions\n    if (this.state.selected > 0) {\n      //this.handlePageSelected(this.state.selected - 1, evt)\n      this.handlePageSelectedIn[this.state.selected - 1](evt)\n    }\n  };\n\n  handleNextPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false) // eslint-disable-line no-unused-expressions\n    if (this.state.selected < this.props.pageCount - 1) {\n      //this.handlePageSelected(this.state.selected + 1, evt)\n      this.handlePageSelectedIn[this.state.selected + 1](evt)\n    }\n  };\n\n  handlePageSelected(selected) {\n    return evt=> {\n      evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false) // eslint-disable-line no-unused-expressions\n\n      if (this.state.selected === selected) return\n\n      this.setState({selected: selected})\n\n      // Call the callback with the new selected item:\n      this.callCallback(selected)\n    }\n  }\n\n  hrefBuilder(pageIndex) {\n    if (this.props.hrefBuilder\n      && pageIndex !== this.state.selected\n      && pageIndex >= 0\n      && pageIndex < this.props.pageCount\n    ) {\n      return this.props.hrefBuilder(pageIndex + 1)\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof (this.props.onPageChange) !== 'undefined'\n        && typeof (this.props.onPageChange) === 'function') {\n      this.props.onPageChange({selected: selectedItem})\n    }\n  };\n\n  getPageElement(index) {\n    return <PageView onClick={this.handlePageSelectedIn[index]}\n      selected={this.state.selected === index}\n      pageClassName={this.props.pageClassName}\n      pageLinkClassName={this.props.pageLinkClassName}\n      activeClassName={this.props.activeClassName}\n      extraAriaContext={this.props.extraAriaContext}\n      href={this.hrefBuilder(index)}\n      page={index + 1}\n      key={index} />\n  }\n\n  pagination = () => {\n    let items = []\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items.push(this.getPageElement(index))\n      }\n\n    }\n    else {\n\n      let leftSide = (this.props.pageRangeDisplayed / 2)\n      let rightSide = (this.props.pageRangeDisplayed - leftSide)\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected\n        leftSide = this.props.pageRangeDisplayed - rightSide\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide = this.state.selected\n        rightSide = this.props.pageRangeDisplayed - leftSide\n      }\n\n      let index\n      let page\n      let breakView\n      let createPageView = (index) => this.getPageElement(index)\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items.push(createPageView(index))\n          continue\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items.push(createPageView(index))\n          continue\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items.push(createPageView(index))\n          continue\n        }\n\n        let keys = Object.keys(items)\n        let breakLabelKey = keys[keys.length - 1]\n        let breakLabelValue = items[breakLabelKey]\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          let key = 'breakview' + index\n          breakView = (\n            <BreakView breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n              key={key} />\n          )\n\n          items.push(breakView)\n        }\n      }\n    }\n\n    return items\n  };\n\n  render() {\n    let disabled = this.props.disabledClassName\n    const previousClasses = classNames(this.props.previousClassName,\n                                       {[disabled]: this.state.selected === 0})\n    const nextClasses = classNames(this.props.nextClassName,\n                                   {[disabled]: this.state.selected === this.props.pageCount - 1})\n\n    return (\n      <ul className={this.props.containerClassName}>\n        {(_=> {\n          var pagination = [\n            <li className={previousClasses} key=\"prev\">\n              <a onClick={this.handlePreviousPage}\n                 className={this.props.previousLinkClassName}\n                 href={this.hrefBuilder(this.state.selected - 1)}\n                 tabIndex=\"0\"\n                 onKeyPress={this.handlePreviousPage}>\n                {this.props.previousLabel}\n              </a>\n            </li>]\n            .concat(this.pagination())\n            .concat(\n              <li className={nextClasses} key=\"next\">\n                <a onClick={this.handleNextPage}\n                   className={this.props.nextLinkClassName}\n                   href={this.hrefBuilder(this.state.selected + 1)}\n                   tabIndex=\"0\"\n                   onKeyPress={this.handleNextPage}>\n                  {this.props.nextLabel}\n                </a>\n              </li>\n            )\n          if (this.props.side == 'left') {\n            pagination.splice(1, 0, pagination.pop())\n          }\n\n          if (this.props.side == 'right') {\n            pagination.splice(pagination.length - 2, 0, pagination.shift())\n          }\n\n          return pagination\n        })()}\n      </ul>\n    )\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  PaginationBoxView.displayName = 'PaginationBoxView'\n}\n"]}