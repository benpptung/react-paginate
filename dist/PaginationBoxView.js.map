{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","evt","preventDefault","returnValue","state","selected","handlePageSelected","handleNextPage","pageCount","setState","callCallback","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","index","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","marginPagesDisplayed","keys","Object","breakLabelKey","length","breakLabelValue","breakLabel","breakClassName","initialPage","forcePage","disableInitialCallback","nextProps","pageIndex","hrefBuilder","bind","pageClassName","pageLinkClassName","activeClassName","extraAriaContext","disabled","disabledClassName","previousClasses","previousClassName","nextClasses","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","propTypes","number","isRequired","node","func","bool","string","defaultProps","process","env","NODE_ENV","displayName"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAGqBA,iB;;;AAuCnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAuBnBC,kBAvBmB,GAuBE,eAAO;AAC1BC,UAAIC,cAAJ,GAAqBD,IAAIC,cAAJ,EAArB,GAA6CD,IAAIE,WAAJ,GAAkB,KAA/D,CAD0B,CAC4C;AACtE,UAAI,MAAKC,KAAL,CAAWC,QAAX,GAAsB,CAA1B,EAA6B;AAC3B,cAAKC,kBAAL,CAAwB,MAAKF,KAAL,CAAWC,QAAX,GAAsB,CAA9C,EAAiDJ,GAAjD;AACD;AACF,KA5BkB;;AAAA,UA8BnBM,cA9BmB,GA8BF,eAAO;AACtBN,UAAIC,cAAJ,GAAqBD,IAAIC,cAAJ,EAArB,GAA6CD,IAAIE,WAAJ,GAAkB,KAA/D,CADsB,CACgD;AACtE,UAAI,MAAKC,KAAL,CAAWC,QAAX,GAAsB,MAAKN,KAAL,CAAWS,SAAX,GAAuB,CAAjD,EAAoD;AAClD,cAAKF,kBAAL,CAAwB,MAAKF,KAAL,CAAWC,QAAX,GAAsB,CAA9C,EAAiDJ,GAAjD;AACD;AACF,KAnCkB;;AAAA,UAqCnBK,kBArCmB,GAqCE,UAACD,QAAD,EAAWJ,GAAX,EAAmB;AACtCA,UAAIC,cAAJ,GAAqBD,IAAIC,cAAJ,EAArB,GAA6CD,IAAIE,WAAJ,GAAkB,KAA/D,CADsC,CACgC;;AAEtE,UAAI,MAAKC,KAAL,CAAWC,QAAX,KAAwBA,QAA5B,EAAsC;;AAEtC,YAAKI,QAAL,CAAc,EAACJ,UAAUA,QAAX,EAAd;;AAEA;AACA,YAAKK,YAAL,CAAkBL,QAAlB;AACD,KA9CkB;;AAAA,UA0DnBK,YA1DmB,GA0DJ,UAACC,YAAD,EAAkB;AAC/B,UAAI,OAAQ,MAAKZ,KAAL,CAAWa,YAAnB,KAAqC,WAArC,IACG,OAAQ,MAAKb,KAAL,CAAWa,YAAnB,KAAqC,UAD5C,EACwD;AACtD,cAAKb,KAAL,CAAWa,YAAX,CAAwB,EAACP,UAAUM,YAAX,EAAxB;AACD;AACF,KA/DkB;;AAAA,UA6EnBE,UA7EmB,GA6EN,YAAM;AACjB,UAAIC,QAAQ,EAAZ;;AAEA,UAAI,MAAKf,KAAL,CAAWS,SAAX,IAAwB,MAAKT,KAAL,CAAWgB,kBAAvC,EAA2D;;AAEzD,aAAK,IAAIC,QAAQ,CAAjB,EAAoBA,QAAQ,MAAKjB,KAAL,CAAWS,SAAvC,EAAkDQ,OAAlD,EAA2D;AACzDF,gBAAMG,IAAN,CAAW,MAAKC,cAAL,CAAoBF,KAApB,CAAX;AACD;AAEF,OAND,MAOK;;AAEH,YAAIG,WAAY,MAAKpB,KAAL,CAAWgB,kBAAX,GAAgC,CAAhD;AACA,YAAIK,YAAa,MAAKrB,KAAL,CAAWgB,kBAAX,GAAgCI,QAAjD;;AAEA,YAAI,MAAKf,KAAL,CAAWC,QAAX,GAAsB,MAAKN,KAAL,CAAWS,SAAX,GAAuB,MAAKT,KAAL,CAAWgB,kBAAX,GAAgC,CAAjF,EAAoF;AAClFK,sBAAY,MAAKrB,KAAL,CAAWS,SAAX,GAAuB,MAAKJ,KAAL,CAAWC,QAA9C;AACAc,qBAAW,MAAKpB,KAAL,CAAWgB,kBAAX,GAAgCK,SAA3C;AACD,SAHD,MAIK,IAAI,MAAKhB,KAAL,CAAWC,QAAX,GAAsB,MAAKN,KAAL,CAAWgB,kBAAX,GAAgC,CAA1D,EAA6D;AAChEI,qBAAW,MAAKf,KAAL,CAAWC,QAAtB;AACAe,sBAAY,MAAKrB,KAAL,CAAWgB,kBAAX,GAAgCI,QAA5C;AACD;;AAED,YAAIH,eAAJ;AACA,YAAIK,aAAJ;AACA,YAAIC,kBAAJ;AACA,YAAIC,iBAAiB,SAAjBA,cAAiB,CAACP,KAAD;AAAA,iBAAW,MAAKE,cAAL,CAAoBF,KAApB,CAAX;AAAA,SAArB;;AAEA,aAAKA,SAAQ,CAAb,EAAgBA,SAAQ,MAAKjB,KAAL,CAAWS,SAAnC,EAA8CQ,QAA9C,EAAuD;;AAErDK,iBAAOL,SAAQ,CAAf;;AAEA,cAAIK,QAAQ,MAAKtB,KAAL,CAAWyB,oBAAvB,EAA6C;AAC3CV,kBAAMG,IAAN,CAAWM,eAAeP,MAAf,CAAX;AACA;AACD;;AAED,cAAIK,OAAO,MAAKtB,KAAL,CAAWS,SAAX,GAAuB,MAAKT,KAAL,CAAWyB,oBAA7C,EAAmE;AACjEV,kBAAMG,IAAN,CAAWM,eAAeP,MAAf,CAAX;AACA;AACD;;AAED,cAAKA,UAAS,MAAKZ,KAAL,CAAWC,QAAX,GAAsBc,QAAhC,IAA8CH,UAAS,MAAKZ,KAAL,CAAWC,QAAX,GAAsBe,SAAjF,EAA6F;AAC3FN,kBAAMG,IAAN,CAAWM,eAAeP,MAAf,CAAX;AACA;AACD;;AAED,cAAIS,OAAOC,OAAOD,IAAP,CAAYX,KAAZ,CAAX;AACA,cAAIa,gBAAgBF,KAAKA,KAAKG,MAAL,GAAc,CAAnB,CAApB;AACA,cAAIC,kBAAkBf,MAAMa,aAAN,CAAtB;;AAEA,cAAI,MAAK5B,KAAL,CAAW+B,UAAX,IAAyBD,oBAAoBP,SAAjD,EAA4D;AAC1DA,wBACE,qDAAW,YAAY,MAAKvB,KAAL,CAAW+B,UAAlC;AACE,8BAAgB,MAAK/B,KAAL,CAAWgC,cAD7B;AAEE,mBAAI,WAFN,GADF;;AAMAjB,kBAAMG,IAAN,CAAWK,SAAX;AACD;AACF;AACF;;AAED,aAAOR,KAAP;AACD,KA9IkB;;AAGjB,UAAKV,KAAL,GAAa;AACXC,gBAAUN,MAAMiC,WAAN,GAAoBjC,MAAMiC,WAA1B,GACEjC,MAAMkC,SAAN,GAAkBlC,MAAMkC,SAAxB,GACA;AAHD,KAAb;AAHiB;AAQlB;;;;wCAEmB;AAClB;AACA,UAAI,OAAQ,KAAKlC,KAAL,CAAWiC,WAAnB,KAAoC,WAApC,IAAmD,CAAC,KAAKjC,KAAL,CAAWmC,sBAAnE,EAA2F;AACzF,aAAKxB,YAAL,CAAkB,KAAKX,KAAL,CAAWiC,WAA7B;AACD;AACF;;;8CAEyBG,S,EAAW;AACnC,UAAI,OAAQA,UAAUF,SAAlB,KAAiC,WAAjC,IAAgD,KAAKlC,KAAL,CAAWkC,SAAX,KAAyBE,UAAUF,SAAvF,EAAkG;AAChG,aAAKxB,QAAL,CAAc,EAACJ,UAAU8B,UAAUF,SAArB,EAAd;AACD;AACF;;;gCA2BWG,S,EAAW;AACrB,UAAI,KAAKrC,KAAL,CAAWsC,WAAX,IACCD,cAAc,KAAKhC,KAAL,CAAWC,QAD1B,IAEC+B,aAAa,CAFd,IAGCA,YAAY,KAAKrC,KAAL,CAAWS,SAH5B,EAIE;AACA,eAAO,KAAKT,KAAL,CAAWsC,WAAX,CAAuBD,YAAY,CAAnC,CAAP;AACD;AACF;;;mCAScpB,K,EAAO;AACpB,aAAO,oDAAU,SAAS,KAAKV,kBAAL,CAAwBgC,IAAxB,CAA6B,IAA7B,EAAmCtB,KAAnC,CAAnB;AACL,kBAAU,KAAKZ,KAAL,CAAWC,QAAX,KAAwBW,KAD7B;AAEL,uBAAe,KAAKjB,KAAL,CAAWwC,aAFrB;AAGL,2BAAmB,KAAKxC,KAAL,CAAWyC,iBAHzB;AAIL,yBAAiB,KAAKzC,KAAL,CAAW0C,eAJvB;AAKL,0BAAkB,KAAK1C,KAAL,CAAW2C,gBALxB;AAML,cAAM,KAAKL,WAAL,CAAiBrB,KAAjB,CAND;AAOL,cAAMA,QAAQ,CAPT;AAQL,aAAKA,KARA,GAAP;AASD;;;6BAqEQ;AACP,UAAI2B,WAAW,KAAK5C,KAAL,CAAW6C,iBAA1B;;AAEA,UAAMC,kBAAkB,0BAAW,KAAK9C,KAAL,CAAW+C,iBAAtB,sBACaH,QADb,EACwB,KAAKvC,KAAL,CAAWC,QAAX,KAAwB,CADhD,EAAxB;;AAGA,UAAM0C,cAAc,0BAAW,KAAKhD,KAAL,CAAWiD,aAAtB,sBACaL,QADb,EACwB,KAAKvC,KAAL,CAAWC,QAAX,KAAwB,KAAKN,KAAL,CAAWS,SAAX,GAAuB,CADvE,EAApB;;AAGA,aACE;AAAA;AAAA,UAAI,WAAW,KAAKT,KAAL,CAAWkD,kBAA1B;AACE;AAAA;AAAA,YAAI,WAAWJ,eAAf;AACE;AAAA;AAAA,cAAG,SAAS,KAAK7C,kBAAjB;AACG,yBAAW,KAAKD,KAAL,CAAWmD,qBADzB;AAEG,oBAAM,KAAKb,WAAL,CAAiB,KAAKjC,KAAL,CAAWC,QAAX,GAAsB,CAAvC,CAFT;AAGG,wBAAS,GAHZ;AAIG,0BAAY,KAAKL,kBAJpB;AAKG,iBAAKD,KAAL,CAAWoD;AALd;AADF,SADF;AAWG,aAAKtC,UAAL,EAXH;AAaE;AAAA;AAAA,YAAI,WAAWkC,WAAf;AACE;AAAA;AAAA,cAAG,SAAS,KAAKxC,cAAjB;AACG,yBAAW,KAAKR,KAAL,CAAWqD,iBADzB;AAEG,oBAAM,KAAKf,WAAL,CAAiB,KAAKjC,KAAL,CAAWC,QAAX,GAAsB,CAAvC,CAFT;AAGG,wBAAS,GAHZ;AAIG,0BAAY,KAAKE,cAJpB;AAKG,iBAAKR,KAAL,CAAWsD;AALd;AADF;AAbF,OADF;AAyBD;;;;;;AAzNkBvD,iB,CACZwD,S,GAAY;AACjB9C,aAAwB,oBAAU+C,MAAV,CAAiBC,UADxB;AAEjBzC,sBAAwB,oBAAUwC,MAAV,CAAiBC,UAFxB;AAGjBhC,wBAAwB,oBAAU+B,MAAV,CAAiBC,UAHxB;AAIjBL,iBAAwB,oBAAUM,IAJjB;AAKjBJ,aAAwB,oBAAUI,IALjB;AAMjB3B,cAAwB,oBAAU2B,IANjB;AAOjBpB,eAAwB,oBAAUqB,IAPjB;AAQjB9C,gBAAwB,oBAAU8C,IARjB;AASjB1B,eAAwB,oBAAUuB,MATjB;AAUjBtB,aAAwB,oBAAUsB,MAVjB;AAWjBrB,0BAAwB,oBAAUyB,IAXjB;AAYjBV,sBAAwB,oBAAUW,MAZjB;AAajBrB,iBAAwB,oBAAUqB,MAbjB;AAcjBpB,qBAAwB,oBAAUoB,MAdjB;AAejBnB,mBAAwB,oBAAUmB,MAfjB;AAgBjBd,qBAAwB,oBAAUc,MAhBjB;AAiBjBZ,iBAAwB,oBAAUY,MAjBjB;AAkBjBV,yBAAwB,oBAAUU,MAlBjB;AAmBjBR,qBAAwB,oBAAUQ,MAnBjB;AAoBjBhB,qBAAwB,oBAAUgB,MApBjB;AAqBjB7B,kBAAwB,oBAAU6B;AArBjB,C;AADA9D,iB,CAyBZ+D,Y,GAAe;AACpBrD,aAAwB,EADJ;AAEpBO,sBAAwB,CAFJ;AAGpBS,wBAAwB,CAHJ;AAIpBiB,mBAAwB,UAJJ;AAKpBK,qBAAwB,UALJ;AAMpBE,iBAAwB,MANJ;AAOpBG,iBAAwB,UAPJ;AAQpBE,aAAwB,MARJ;AASpBvB,cAAwB,KATJ;AAUpBc,qBAAwB,UAVJ;AAWpBV,0BAAwB;AAXJ,C;kBAzBHpC,iB;;;AA4NrB,IAAIgE,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzClE,oBAAkBmE,WAAlB,GAAgC,mBAAhC;AACD","file":"PaginationBoxView.js","sourcesContent":["'use strict'\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport PageView from './PageView'\nimport BreakView from './BreakView'\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : 'selected',\n    previousClassName     : 'previous',\n    nextClassName         : 'next',\n    previousLabel         : 'Previous',\n    nextLabel             : 'Next',\n    breakLabel            : '...',\n    disabledClassName     : 'disabled',\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage\n                : props.forcePage ? props.forcePage\n                : 0\n    }\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof (this.props.initialPage) !== 'undefined' && !this.props.disableInitialCallback) {\n      this.callCallback(this.props.initialPage)\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof (nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage})\n    }\n  }\n\n  handlePreviousPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false) // eslint-disable-line no-unused-expressions\n    if (this.state.selected > 0) {\n      this.handlePageSelected(this.state.selected - 1, evt)\n    }\n  };\n\n  handleNextPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false) // eslint-disable-line no-unused-expressions\n    if (this.state.selected < this.props.pageCount - 1) {\n      this.handlePageSelected(this.state.selected + 1, evt)\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false) // eslint-disable-line no-unused-expressions\n\n    if (this.state.selected === selected) return\n\n    this.setState({selected: selected})\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected)\n  };\n\n  hrefBuilder(pageIndex) {\n    if (this.props.hrefBuilder\n      && pageIndex !== this.state.selected\n      && pageIndex >= 0\n      && pageIndex < this.props.pageCount\n    ) {\n      return this.props.hrefBuilder(pageIndex + 1)\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof (this.props.onPageChange) !== 'undefined'\n        && typeof (this.props.onPageChange) === 'function') {\n      this.props.onPageChange({selected: selectedItem})\n    }\n  };\n\n  getPageElement(index) {\n    return <PageView onClick={this.handlePageSelected.bind(null, index)}\n      selected={this.state.selected === index}\n      pageClassName={this.props.pageClassName}\n      pageLinkClassName={this.props.pageLinkClassName}\n      activeClassName={this.props.activeClassName}\n      extraAriaContext={this.props.extraAriaContext}\n      href={this.hrefBuilder(index)}\n      page={index + 1}\n      key={index} />\n  }\n\n  pagination = () => {\n    let items = []\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items.push(this.getPageElement(index))\n      }\n\n    }\n    else {\n\n      let leftSide = (this.props.pageRangeDisplayed / 2)\n      let rightSide = (this.props.pageRangeDisplayed - leftSide)\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected\n        leftSide = this.props.pageRangeDisplayed - rightSide\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide = this.state.selected\n        rightSide = this.props.pageRangeDisplayed - leftSide\n      }\n\n      let index\n      let page\n      let breakView\n      let createPageView = (index) => this.getPageElement(index)\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items.push(createPageView(index))\n          continue\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items.push(createPageView(index))\n          continue\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items.push(createPageView(index))\n          continue\n        }\n\n        let keys = Object.keys(items)\n        let breakLabelKey = keys[keys.length - 1]\n        let breakLabelValue = items[breakLabelKey]\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n              key=\"breakview\" />\n          )\n\n          items.push(breakView)\n        }\n      }\n    }\n\n    return items\n  };\n\n  render() {\n    let disabled = this.props.disabledClassName\n\n    const previousClasses = classNames(this.props.previousClassName,\n                                       {[disabled]: this.state.selected === 0})\n\n    const nextClasses = classNames(this.props.nextClassName,\n                                   {[disabled]: this.state.selected === this.props.pageCount - 1})\n\n    return (\n      <ul className={this.props.containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={this.props.previousLinkClassName}\n             href={this.hrefBuilder(this.state.selected - 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handlePreviousPage}>\n            {this.props.previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={this.props.nextLinkClassName}\n             href={this.hrefBuilder(this.state.selected + 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handleNextPage}>\n            {this.props.nextLabel}\n          </a>\n        </li>\n      </ul>\n    )\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  PaginationBoxView.displayName = 'PaginationBoxView'\n}\n"]}